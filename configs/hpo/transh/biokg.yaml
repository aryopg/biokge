job.type: search
job.auto_correct: True
search.type: ax_search
dataset.name: biokg
random_seed:
  default: 42
  numba: 42
  numpy: 42
  python: 42
  torch: 42

# training settings (fixed)
train:
  max_epochs: 400
  auto_correct: True

# validation/evaluation settings (fixed)
valid:
  split: valid
  every: 2
  metric: mean_reciprocal_rank_filtered_with_test
  early_stopping:
    patience: 10
    min_threshold.epochs: 50
    min_threshold.metric_value: 0.05

eval:
  split: test
  batch_size: 256

entity_ranking:
  metrics_per.relation_type: True
  filter_with_test: True

# settings for reciprocal relations (if used)
import: [transh, reciprocal_relations_model]
reciprocal_relations_model.base_model.type: transh

# ax settings: hyperparameter search space
ax_search:
  num_trials: 30
  num_sobol_trials: 30 
  parameters:
      # model
    - name: model
      type: choice
      values: [transh, reciprocal_relations_model]
      value_type: str
      is_ordered: False

    # training hyperparameters
    - name: train.batch_size
      type: choice   
      values: [128, 256, 512, 1024]
      value_type: int
      is_ordered: True
    - name: train.type
      type: fixed
      value: negative_sampling
    - name: train.optimizer.default.type
      type: choice
      values: [Adam, Adagrad]
      value_type: str
      is_ordered: False
    - name: train.loss
      type: fixed
      value: kl
    - name: train.optimizer.default.args.lr
      type: range
      bounds: [0.0003, 1.0]
      value_type: float
      log_scale: True
    - name: train.lr_scheduler
      type: fixed
      value: ReduceLROnPlateau
    - name: train.lr_scheduler_args.mode
      type: fixed
      value: max  
    - name: train.lr_scheduler_args.factor
      type: fixed
      value: 0.95  
    - name: train.lr_scheduler_args.threshold
      type: fixed
      value: 0.0001  
    - name: train.lr_scheduler_args.patience
      type: range
      bounds: [0, 10]  
      value_type: int

    # embedding dimension
    - name: lookup_embedder.dim
      type: choice 
      values: [128, 256, 512, 1024]
      is_ordered: True

    # embedding initialization
    - name: lookup_embedder.initialize
      type: choice
      values: [xavier_normal_, xavier_uniform_, normal_, uniform_]  
      value_type: str
      is_ordered: False
    - name: lookup_embedder.initialize_args.normal_.mean
      type: fixed
      value: 0.0
    - name: lookup_embedder.initialize_args.normal_.std
      type: range
      bounds: [0.00001, 1.0]
      value_type: float
      log_scale: True
    - name: lookup_embedder.initialize_args.uniform_.a
      type: range
      bounds: [-1.0, -0.00001]
      value_type: float
    - name: lookup_embedder.initialize_args.xavier_uniform_.gain
      type: fixed
      value: 1.0
    - name: lookup_embedder.initialize_args.xavier_normal_.gain
      type: fixed
      value: 1.0

    # embedding regularization
    - name: lookup_embedder.regularize
      type: choice
      values: ['', 'lp']
      value_type: str
      is_ordered: True
    - name: lookup_embedder.regularize_args.p
      type: choice
      values: [1,2,3]
      value_type: int
      is_ordered: True
    - name: lookup_embedder.regularize_args.weighted
      type: choice
      values: [True, False]
      value_type: bool
      is_ordered: False
    - name: transh.entity_embedder.regularize_weight
      type: range
      bounds: [1.0e-20, 1.0e-01]
      value_type: float
      log_scale: True
    - name: transh.relation_embedder.regularize_weight
      type: range
      bounds: [1.0e-20, 1.0e-01]
      value_type: float
      log_scale: True

    # embedding dropout
    - name: transh.entity_embedder.dropout
      type: range
      bounds: [-0.5, 0.5]
      value_type: float
    - name: transh.relation_embedder.dropout
      type: range
      bounds: [-0.5, 0.5]
      value_type: float

    # training-type specific hyperparameters
    # model-specific entries